## Options ----------------------------------------------------------
set-option global grepcmd 'rg --column --smart-case --sort path'

# UI options
set-option global tabstop 2
set-option global indentwidth 2

set-option global scrolloff 5,10
set-option global ui_options terminal_assistant=cat terminal_status_on_top=true

# Apply formatting by default to every buffer, named or not
hook global WinCreate ^.*$ %{
	add-highlighter window/show-matching show-matching
	add-highlighter window/word-wrap wrap -word -indent

    add-highlighter window/numbers number-lines -hlcursor -relative

	# relative-insert-numbers: Switch between relative and absolute number-lines
	# NORMAL mode uses relative numbers
	# INSERT mode uses absolute numbers
    hook window -group relative-insert-numbers ModeChange .*:insert %{
        add-highlighter -override window/numbers number-lines -hlcursor 
    }

    hook window -group relative-insert-numbers ModeChange .*:insert:.* %{
        add-highlighter -override window/numbers number-lines -hlcursor -relative
    }
}

# Mappings ----------------------------------------------------------

# Normal mode 
map global normal <#>     "<a-;>"                            -docstring 'flip selection direction'
map global normal <a-#>   "<a-:>"                            -docstring 'ensure forward selection direction'
map global normal <esc>   ";,"                               -docstring 'clear all selections to current cursor'

map global normal <a-%>   '*%s<ret>'                         -docstring "select all occurrences of selection"
map global user   <ret>   ':expand<ret>'                     -docstring 'expand selection to next outer region'
map global normal "'"     ':enter_mirror_mode<ret>'          -docstring 'enter mirror mode: expand and surround selections'
map global normal "<a-'>" '\'                                -docstring 'remove hooks'
map global normal <a-=>   ':enter_math_mode<ret>'            -docstring 'enter math mode: increment and decrement counts'
map global normal =       ':enter-phantomsel-mode<ret>'      -docstring 'enter phantom selection mode'

# map m to <a-a/i>, and replace v with m's previous functionality; view mode moves to userspace
map global normal m       <a-i>                              -docstring 'select inner surrounding objects'
map global normal M       <a-a>                              -docstring 'select outer surrounding objects'
map global normal v       m                                  -docstring 'select to next matching character'
map global normal V       M                                  -docstring 'extend to next matching character'
map global normal <a-v>   <a-m>                              -docstring 'select to previous matching character'
map global normal <a-V>   <a-M>                              -docstring 'extend to previous matching character'

# extend full-line selection up and down: https://discuss.kakoune.com/t/improved-and-consistent-line-selection-with-x-and-a-x/2243
map global normal <a-X> %{<a-:><a-;><a-H>Kx}                 -docstring 'extend lines upwards' 
map global normal X %{<a-:>F<ret>x}                          -docstring 'extend lines downwards' 

# clipboard.kak: clipboard sync on explicit yank
hook global NormalKey y clipboard-sync

# Goto mode ---------------------------------------------------------
map global goto n '<esc>:bn<ret>' -docstring 'go to next buffer'
map global goto p '<esc>:bp<ret>' -docstring 'go to previous buffer'

map global view z v -docstring 'center cursor (vertically)'

# User mode ---------------------------------------------------------
## w g d f b q l u o y
#  r s t h k j n e a i
#  x c m p v  ' , .  

map global user b     ':open-buffer-picker<ret>'             -docstring 'open buffer picker' 
map global user c     ':comment-line<ret>'                   -docstring 'comment line'
map global user C     ':comment-block<ret>'                  -docstring 'comment block'
map global user f     ':open-file-picker<ret>'               -docstring 'open file picker'
map global user F     ':open-fzf-file-picker<ret>'           -docstring 'open fuzzy finder file picker'
map global user g     ':w<ret>'                              -docstring 'writes file; :w'
map global user m     ':enter-paste-mode<ret>'               -docstring 'enter paste (from system clipboard) mode'
map global user p     "<a-!>%opt{clipboard_paste}<ret>"      -docstring 'paste (after) from clipboard (OSC-52)'  
map global user P     "!%opt{clipboard_paste}<ret>"          -docstring 'paste (before) from clipboard (OSC-52)' 
map global user r     "|%opt{clipboard_paste}<ret>"          -docstring 'replace from clipboard (OSC-52)'
map global user s     ':w<ret>'                              -docstring 'writes file; :w'
map global user t     ':enter-user-mode kak-tasks<ret>'      -docstring 'task mode'
# map global user w     ":enter-user-mode wiki<ret>"           -docstring 'wiki mode'
map global user x     ":db<ret>"                             -docstring "close buffer"
map global user z     <v>                                    -docstring 'enter view mode'
map global user Z     <V>                                    -docstring 'enter view mode (locked)'
map global user <ret> ':expand<ret>'                         -docstring 'expand selection to next outer region'
map global user /     ':open_rg_picker<ret>'                 -docstring 'search project'
# d, k, l, m are currently reserved for lsp actions

# Prompt mode ------------------------------------------------------------------

map global prompt <a-/> '%sh{dirname "$kak_bufname"}<a-!>/' -docstring 'print current buffer directory' 

# Add search flags
map global prompt <a-i> '<home>(?i)<end>'          -docstring 'case-insensitive search'
map global prompt <a-s> '<home>(?S)<end>'          -docstring "prevents '.' from matching newlines"
map global prompt <a-q> '<home>\Q<end>'            -docstring "begins a quoted (literal) sequence. End with '\E'"

#Insert mode --------------------------------------------------------

map global insert <c-w> '<esc>bc'                  -docstring 'delete last word: readline-equivalent behavior'
map global insert <c-y> '<c-r>"'                   -docstring 'paste selection register (")'
map global insert <a-gt> "<a-;><gt>"               -docstring 'increase indent'
map global insert <a-lt> "<a-;><lt>"               -docstring 'decrease indent'


# tabs for autocomplete
hook global InsertCompletionShow .* %{
    map window insert <tab> <c-n>
    map window insert <s-tab> <c-p>
    hook -once window InsertCompletionHide .* %{
        unmap window insert <tab>
        unmap window insert <s-tab>
    }
}

# User modes --------------------------------------------------------
hook global ModuleLoaded tmux %{ require-module tmux-windowing }

# Autoload Plugins --------------------------------------------------
set-option global kak_tasks_root %sh{ echo $NOTEBOOK_DIR }

# Plugins -----------------------------------------------------------

# colorscheme: kakoune-mysticaltutor
try %{ colorscheme mysticaltutor } catch %{ echo -debug "Error configuring kakoune-mysticaltutor!" }

# Auto-pairing
try %{ enable-auto-pairs } catch %{ echo -debug "Error configuring auto-pairs.kak!" }

# File tree buffer
try %{
    hook global WinSetOption filetype=kaktree %{
        remove-highlighter window/numbers
        remove-hooks window relative-insert-numbers
        remove-highlighter window/wrap
        remove-highlighter  window/show-matching
    }
    kaktree-enable

    set-option global kaktree_double_click_duration '0.5'
    set-option global kaktree_indentation 1
    set-option global kaktree_dir_icon_open  '‚ñæ üóÅ '
    set-option global kaktree_dir_icon_close '‚ñ∏ üóÄ '
    set-option global kaktree_file_icon      '‚†Ä‚†Äüñ∫'

    map global user n ':kaktree-toggle<ret>' -docstring "toggle kaktree to the side"
    map global user "'" ':kaktree-focus<ret>' -docstring "focus the kaktree window"
} catch %{ echo -debug "Error configuring kaktree!" } 

# Selection expansion and manipulation

# kakoune-expand

# kakoune-phantom-selection 
try %{
    declare-user-mode phantom-selection
    map global phantom-selection a ':phantom-selection-add-selection<ret>' -docstring 'add selection to phantom list'
    map global phantom-selection A ':phantom-selection-select-all<ret>' -docstring 'select all phantoms'
    map global phantom-selection n ':phantom-selection-iterate-next<ret>' -docstring 'iterate to next phantom'
    map global phantom-selection e ':phantom-selection-iterate-prev<ret>' -docstring 'iterate to previous phantom'
    map global phantom-selection j ':phantom-selection-clear<ret>' -docstring 'clear phantom selections'

    define-command enter-phantomsel-mode %{ enter-user-mode phantom-selection }
} catch %{ echo -debug "Error configuring kakoune-phantom-selection!" }

# kakoune-vertical-selection
try %{
    map global normal ^     ':vertical-selection-down<ret>'   -docstring 'copy matching selections below' 
    map global normal <a-^> ':vertical-selection-up<ret>'     -docstring 'copy matching selections above' 
} catch %{ echo -debug "Error configuring kakoune-vertical-selection!" }

# gl/listentolist/kakoune-fandt
try %{ require-module fandt } catch %{ echo -debug "Error configuring kakoune-fandt!" } 

# # gh/possumvibes/wiki.kak

# Custom snippets
# kakoune-snippets

define-command ide -params 0..1 %{
    try %{ rename-session %arg{1} }

    rename-client main
    set-option global jumpclient main

    new rename-client tools
    set-option global toolsclient tools

    new rename-client docs
    set-option global docsclient docs
} -docstring "generic IDE setup."

# Enable kak-lsp for session
evaluate-commands %sh{ kak-lsp --kakoune --session "$kak_session" }

# Filetype hooks: enable lsp *last*
hook global WinSetOption filetype=rust %{
    set-option buffer tabstop 4
    set-option buffer indentwidth 4
    lsp-init
}

hook global WinSetOption filetype=lua %{
    set-option buffer tabstop 4
    set-option buffer indentwidth 4
}

hook global WinSetOption filetype=markdown %{
    disable-auto-pairs
}

hook global -always BufOpenFifo '\*grep\*' %{ map global normal <minus> ': grep-next-match<ret>' }
hook global -always BufOpenFifo '\*make\*' %{ map global normal <minus> ': make-next-error<ret>' }
