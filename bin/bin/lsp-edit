#!/bin/bash

# lsp-edit: a test about editing
# determines the correct project root for kak
# better intro coming once this thing works
#
# dependencies:
# - fd
# - fzf
# - tmux

_print_usage() {
    printf "lsp-edit is a wrapper around kakoune and tmux to easily specify the project root environment variable for kak-lsp.

Usage: [OPTIONS] [FILES]...

Arguments:
	[FILES]...  If provided, the files to edit open in the new kakoune session

Options:
	-s <WORKSPACE_ROOT> Specify a file to use as the kak-lsp workspace root. Must match the language's roots in kak-lsp

Requires: tmux, fd, and fzf\n"
}

_print_and_exit1() {
    printf "$@\n"
    exit 1
}

default_extension=".vim"

# The actual selected root starts empty.
selected_root=""

# As does the file list to edit.
files=""

# Choose the correct project root in the directory, with user input as necessary
_select_root_in_pwd(){
    # Get all possible root files in the base directory
    base_search_cmd="fd --max-depth 1 -e $default_extension"

    # Count 'em for quick handling
    slncount=$($base_search_cmd | wc -l)
    [ $slncount -eq 0 ] && return 1

    # if only one result, set selected_root directly and exit
    if [ $slncount -eq 1 ]; then
        selected_root=$($base_search_cmd)
        return;
    fi

    # Otherwise, there are multiple options and the user needs to pick!
    fzf_selection=$($base_search_cmd | fzf --prompt='Pick LSP Root >' --reverse)

    [ -z $fzf_selection ] && exit

    # Set selected_root with the chosen root file
    selected_root=$fzf_selection
}

lsp-edit(){
    # Get selected_root, if present
    while getopts "s:" opt; do
        case $opt in
            s) selected_root="$OPTARG"
            if [[ "$selected_root" != *"$default_extension" ]] >/dev/null; then
                _print_and_exit1 "Invalid LSP project root: only files with extension $default_extension are valid."
            fi;;
            *) _print_usage
                exit 1;;
        esac
    done

    shift $(($OPTIND -1))
    files="$@"

    # Pick root if not specified
    [ -z $selected_root ] && _select_root_in_pwd

    # If we don't have a specified root at this point, there's nothing to be done!
    [ -z $selected_root ] &&
        _print_and_exit1 "no $default_extension files available in this directory. Are you in the right place?"

    # TMUX TIME.

	# sanitize the name for consistent tmux session creation
	session=$(basename $selected_root $default_extension | tr -cd '[a-zA-Z0-9]_-')
	SESSIONEXISTS=$(tmux list-sessions | grep $session)
    [ ! -z "$files" ] && EDITOR_CMD="kak -s $session $files"

	if [ "$SESSIONEXISTS" = "" ]; then
        tmux new-session -d -s $session \
        -e KAK_LSP_PROJECT_ROOT_CSHARP=$selected_root

        # set main window for kak, open repl window
        tmux rename-window -t $session:0 'kak' 
        tmux new-window -t $session:1 -n 'shell'
	fi

    # if we have files, open 'em in the session
    if [ ! -z "$EDITOR_CMD" ]; then
        # enter insert mode (zsh-problem-specific, likely needs changing for other shells with vi mode)
        # tmux send-keys -t $session:0 "i"

        # now send the actual command
		tmux send-keys -t $session:0 "$EDITOR_CMD" C-m
    fi

	# if we're attached to a different session, switch
	if [ -z "$TMUX" ]; then
    	# attach to the session in the kak window
        tmux attach -t $session:0
	else
    	tmux switch -t $session:0
	fi
}
lsp-edit "$@"

